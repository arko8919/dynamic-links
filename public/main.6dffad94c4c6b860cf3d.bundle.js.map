{"version":3,"sources":["webpack://url-shortener/./src/js/fetch-response.js","webpack://url-shortener/./src/js/generate-link.js","webpack://url-shortener/./src/js/get-link.js","webpack://url-shortener/./src/js/copy-to-clipboard.js","webpack://url-shortener/./src/index.js","webpack://url-shortener/./src/js/valid-url.js"],"names":["outputRef","document","querySelector","warningRef","url","generateLink","data","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","objectResponse","JSON","parse","response","value","shortLink","textContent","fetchResponse","send","inputRef","param","dynamicLinkInfo","domainUriPrefix","link","suffix","option","buttonRef","querySelectorAll","addEventListener","event","string","RegExp","test","stringify","preventDefault","select","setSelectionRange","execCommand"],"mappings":"mBAAA,IAAMA,EAAYC,SAASC,cAAc,WACnCC,EAAaF,SAASC,cAAc,YCC1C,IACME,EAAM,iEAAH,OADM,2CAGR,SAASC,EAAaC,GACzB,IAAIC,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQL,GAAK,GACtBG,EAAIG,iBAAiB,eAAgB,oBACrCH,EAAII,mBAAqB,YDNtB,SAAuBJ,GAC1B,GAAIA,EAAIK,aAAeJ,eAAeK,KAClC,GAAmB,IAAfN,EAAIO,QAAiBP,EAAIO,QAAU,KAAOP,EAAIO,OAAS,IAAM,CAC7D,IAAIC,EAAiBC,KAAKC,MAAMV,EAAIW,UACpClB,EAAUmB,MAAQJ,EAAeK,UACjCjB,EAAWkB,YAAc,QAEJL,KAAKC,MAAMV,EAAIW,UACpCf,EAAWkB,YAAc,oBCD7BC,CAAcf,IAElBA,EAAIgB,KAAKjB,GCTb,IAAMkB,EAAWvB,SAASC,cAAc,UAClCC,EAAaF,SAASC,cAAc,YAGpCuB,EACN,CACIC,gBAAiB,CACbC,gBAAiB,yBACjBC,KAAM,IAEVC,OAAQ,CACJC,OAAQ,UCdhB,IAAM9B,EAAYC,SAASC,cAAc,WCIzC,IAAM6B,EAAY9B,SAAS+B,iBAAiB,yBAG5CD,EAAU,GAAGE,iBAAiB,SFWvB,SAAuBC,GGjBvB,IAAkBC,EHmBE,KAAnBX,EAASL,QGnBQgB,EHmBiBX,EAASL,MGlBjC,IAAIiB,OAAO,wKAKC,KACTC,KAAKF,KHwBtBV,EAAK,gBAAL,KAAmCD,EAASL,MAM5Cd,EAHaW,KAAKsB,UAAUb,IAbxBtB,EAAWkB,YAAc,KAEzBa,EAAMK,iBACNpC,EAAWkB,YAAc,wBEhBjCU,EAAU,GAAGE,iBAAiB,SDPvB,WACHjC,EAAUwC,SACVxC,EAAUyC,kBAAkB,EAAG,OAC/BxC,SAASyC,YAAY,Y","file":"main.6dffad94c4c6b860cf3d.bundle.js","sourcesContent":["const outputRef = document.querySelector('#output');\r\nconst warningRef = document.querySelector('.warning');\r\n\r\nexport function fetchResponse(xhr) {\r\n    if (xhr.readyState === XMLHttpRequest.DONE) {\r\n        if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 400)) {\r\n            let objectResponse = JSON.parse(xhr.response);\r\n            outputRef.value = objectResponse.shortLink;\r\n            warningRef.textContent = '';\r\n        } else {\r\n            let objectResponse = JSON.parse(xhr.response);\r\n            warningRef.textContent = 'Enter correct URL';\r\n\r\n           \r\n        }\r\n    }\r\n}","import {fetchResponse} from './fetch-response';\r\n\r\nconst apiKey = 'AIzaSyCezBfMpaJL-cj_IG0kyF8wK1LcbiCprcI';\r\nconst url = `https://firebasedynamiclinks.googleapis.com/v1/shortLinks?key=${apiKey}`;\r\n\r\nexport function generateLink(data) {\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", url, true)\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.onreadystatechange = function() {\r\n        fetchResponse(xhr);         \r\n    };\r\n    xhr.send(data);\r\n}","import { validURL } from './valid-url';\r\nimport { generateLink } from './generate-link';\r\n\r\nconst inputRef = document.querySelector('#input');\r\nconst warningRef = document.querySelector('.warning');\r\n\r\n\r\nconst param =\r\n{\r\n    dynamicLinkInfo: {\r\n        domainUriPrefix: 'https://arko.page.link',\r\n        link: '',\r\n    },\r\n    suffix: {\r\n        option: 'SHORT'\r\n    }\r\n};\r\n\r\nexport function urlValidation(event) {\r\n    // check if there is value inside input area and validate if this is correct URl\r\n    if (inputRef.value !== '' && validURL(inputRef.value)) {\r\n        updateParam();\r\n        warningRef.textContent = '';\r\n    } else {\r\n        event.preventDefault()\r\n        warningRef.textContent = 'Enter correct URL';       \r\n    }\r\n}\r\n\r\n// update param object with validated URL\r\nfunction updateParam() {\r\n    // update parameters object with new link\r\n    param['dynamicLinkInfo']['link'] = inputRef.value;\r\n\r\n    // serialization - change object into string\r\n    const data = JSON.stringify(param);\r\n\r\n    // generate short URL\r\n    generateLink(data);\r\n}","const outputRef = document.querySelector('#output');\r\n\r\nexport function copyToClipboard() {\r\n    outputRef.select();\r\n    outputRef.setSelectionRange(0, 99999); /* For mobile devices */\r\n    document.execCommand(\"copy\");\r\n}","import './style.scss';\r\nimport {urlValidation} from './js/get-link';\r\nimport {copyToClipboard} from './js/copy-to-clipboard';\r\n\r\nconst buttonRef = document.querySelectorAll('button[type=\"button\"]');\r\n\r\n// url shortener\r\nbuttonRef[0].addEventListener('click', urlValidation);\r\n// copy to clipboard\r\nbuttonRef[1].addEventListener('click', copyToClipboard);","// validate URL ( I need to adjust regular expresion to match exactly link )\r\nexport function validURL(string) {\r\n    let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n        '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n    return !!pattern.test(string);\r\n}"],"sourceRoot":""}